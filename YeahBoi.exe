--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------
Section 1: General Syntax
-----------------------
aws [options] <command> <subcommand> [parameters]

Options: 

--debug (boolean)
#Turn on debug logging.

--endpoint-url (string)
#Override command's default URL with the given URL.

--no-verify-ssl (boolean)
#By default, the AWS CLI uses SSL when communicating with AWS services. For each SSL connection, the AWS CLI will verify SSL certificates. This option overrides the default behavior of verifying SSL certificates.

--output (json/text/table)
#Output format

--query (string)
#A JMESPath query to use in filtering the response data.

--profile (string)
#Use a specific profile from your credential file.

--region (string)
#The region to use. Overrides config/env settings.

--version (string)
#Display the version of this tool.

-----------------------
Section 2: Configure
-----------------------

Command 1: aws configure

#Configures AWS CLI with AWS access keys.

-----------------------
Section 3: IAM
-----------------------

aws iam list-users
#Lists all the iam users.

aws iam list-groups
#Lists all the iam groups.
 
aws iam list-roles
#Lists all the iam roles.

aws iam list-policies
#Lists all the iam policies.

aws iam create-user --user-name <username>
#Creates an IAM user in the current account.

aws iam create-group --group-name <groupname>
#Creates an IAM group in the current account.

aws iam create-role --role-name <rolename> --assume-role-policy-document file://<path to policy json file>
#Creates an IAM role in the current account.

aws iam create-policy --policy-name <rolename> --policy-document file://<path to policy json file>
#Creates an IAM policy in the current account.

aws iam list-attached-group-policies --group-name <groupname>
#Lists policies attached to the group.

aws iam list-attached-role-policies --role-name <rolename>
#Lists policies attached to the role.

aws iam list-attached-user-policies --user-name <username>
#Lists policies attached to the user.

aws iam list-group-policies --group-name <groupname>
#Lists managed policies attached to the group.

aws iam list-user-policies --user-name <username>
#Lists managed policies attached to the user.

aws iam list-role-policies --role-name <rolename>
#Lists managed policies attached to the role.

aws iam list-groups-for-user --user-name <username>
#Lists groups attached to the user.

aws iam list-signing-certificates --user-name <username>
#Lists signing certificates for the user.

aws iam list-ssh-public-keys --user-name <username>
#Lists public ssh keys for the user.

aws iam list-virtual-mfa-devices
#Lists all virtual-mfa devices present.

aws iam get-policy --policy-arn <arn> --version-id <version>
#Retrieves information about the specified managed policy

aws iam get-policy-version --policy-arn arn:aws:iam::123456789012:policy/MyPolicy --version-id v2
#Retrieves information about the specified version of the specified managed policy, including the policy document.

aws iam get-user --user-name <username>
#Retrieves information about the specified IAM user.

aws iam get-role --role-name <role name>
#Retrieves information about the specified role.

aws iam get-group --group-name <group name>
#Retrieves information about the specified group.

aws iam get-user-policy --user-name <username> --policy-name <policy name>
#Retrieves the specified inline policy document that is embedded in the specified IAM user.

aws iam get-role-policy --role-name <rolename> --policy-name <policy name>
#Retrieves the specified inline policy document that is embedded with the specified IAM role.

aws iam get-group-policy --group-name <rolename> --policy-name <policy name>
#Retrieves the specified inline policy document that is embedded with the specified IAM group.

aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/ReadOnlyAccess --group-name Finance
#Attaches the specified managed policy to the specified IAM group.

aws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/ReadOnlyAccess --role-name ReadOnlyRole
#Attaches the specified managed policy to the specified IAM role.

aws iam attach-user-policy --policy-arn arn:aws:iam:ACCOUNT-ID:aws:policy/AdministratorAccess --user-name Alice
#Attaches the specified managed policy to the specified user.

aws iam create-login-profile --user-name <value> --password <value>
#Creates a password for the specified IAM user.

aws iam get-login-profile --user-name <value>
#Retrieves the username and password creation date for the specified IAM user. 

aws iam list-instance-profiles
#Lists the instance profiles that have the specified path prefix.

aws iam get-instance-profile --instance-profile-name ExampleInstanceProfile
#Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role.

aws iam put-group-policy --group-name <value> --policy-document file://<path to policy file> --policy-name <name for the policy>
#Adds or updates an inline policy document that is embedded in the specified IAM group.

aws iam put-role-policy --role-name <value> --policy-name <value> --policy-document file://<path to policy document>
#Adds or updates an inline policy document that is embedded in the specified IAM role.

aws iam put-user-policy --user-name <value> --policy-name <value> --policy-document file://<path to policy document>
#Adds or updates an inline policy document that is embedded in the specified IAM user.

aws iam remove-user-from-group --user-name Bob --group-name Admins
#Removes the specified user from the specified group.

aws iam update-group --group-name Test --new-group-name Test-1
#Updates the name and/or the path of the specified IAM group.

-----------------------
Section 4: API Gateway
-----------------------

aws apigateway get-account
#Gets information about the current Account resource.

aws apigateway get-rest-apis
#Lists the RestApis resources for your collection.

aws apigateway get-rest-api
#Lists the RestApi resource in the collection.

aws apigateway get-api-keys
#Gets information about the current ApiKeys resource.

aws apigateway get-api-key --api-key <key>
#Gets information about the current ApiKey resource.

aws apigateway get-method --rest-api-id <api id> --http-method <HTTP method> --resource-id <value>
#Describe an existing Method resource.

aws apigateway get-method-response --rest-api-id <id> --resource-id <id> --http-method <HTTP method> --status-code <HTTP code>
#Describes a MethodResponse resource.

aws apigateway get-authorizers --rest-api-id <value>
#Describe an existing Authorizers resource.

aws apigateway get-authorizer --rest-api-id <api id> --authorizer-id <value>
#Describe an existing Authorizer resource.

aws apigateway get-client-certificates
#Gets a collection of ClientCertificate resources.

aws apigateway get-resources --rest-api-id <api id>
#Lists information about a collection of Resource resources.

aws apigateway get-resource --rest-api-id <api id> --resource-id <value>
#Lists information about a resource.

aws apigateway get-client-certificates
#Gets a collection of ClientCertificate resources.

aws apigateway get-client-certificate --client-certificate-id <id>
#Gets information about the current ClientCertificate resource.

aws apigateway get-integration --rest-api-id <api id> --resource-id <value> --http-method <HTTP method>
#Get the integration settings.

aws apigateway get-integration-response --rest-api-id <api id> --resource-id <id> --http-method <HTTP method> --status-code 200
#Represents a get integration response.

aws apigateway get-usage-plans
#Gets all the usage plans of the caller's account.

aws apigateway get-usage-plan --usage-plan-id <id>
#Gets a usage plan of a given plan identifier.

aws apigateway get-usage-plan-keys --usage-plan-id <id>
#Gets all the usage plan keys representing the API keys added to a specified usage plan.

aws apigateway get-usage-plan-key --usage-plan-id <id> --key-id <key>
#Gets a usage plan key of a given key identifier.

aws apigateway put-method --rest-api-id <id> --resource-id <id> --http-method <HTTP method> --authorization-type "NONE" --no-api-key-required --request-parameters "method.request.header.custom-header=false"
#Add a method to an existing Resource resource.

aws apigateway put-rest-api --rest-api-id <id> --mode overwrite --body 'file:///<path to Swagger_template.json>'
#updates an existing API with an input of external API definitions.

aws apigateway create-api-key --name '<name>' --description '<description>' --enabled --stage-keys restApiId='<api id>',stageName='<stage name>'
#Create an ApiKey resource.

aws apigateway create-rest-api --name '<name>' --description '<description>'
#Creates a new RestApi resource.

aws apigateway update-api-key --api-key <key>
#Changes information about an ApiKey resource.

aws apigateway update-rest-api --rest-api-id <id>
#Changes information about the specified API.

-----------------------
Section 5: Lambda
-----------------------

aws lambda list-aliases --function-name <value>
#Returns a list of aliases for a Lambda function.

aws lambda get-alias --function-name <function name> --name <value>
#Returns details about a Lambda function alias.

aws lambda list-functions
#Returns a list of Lambda functions, with the version-specific configuration of each.

aws lambda get-function --function-name <value>
#Returns information about the function or function version.

aws lambda get-policy --function-name <value>
#Returns the resource-based IAM policy for a function, version, or alias.

aws lambda list-layers
#Lists AWS Lambda layers and shows information about the latest version of each.

aws lambda get-layer-version --layer-name <value> --version-number <value>
#Returns information about a version of an AWS Lambda layer.

aws lambda get-layer-version-by-arn --arn <value>
#Returns information about a version of an AWS Lambda layer 

aws lambda get-layer-version-policy --layer-name <value> --version-number <value>
#Returns the permission policy for a version of an AWS Lambda layer.

aws lambda list-event-source-mappings
#Lists event source mappings.

aws lambda invoke --function-name <value>
#Invokes a Lambda function.

aws lambda get-account-settings
#Retrieves details about your account's limits and usage in an AWS Region.

aws lambda list-code-signing-configs
#Returns a list of code signing configurations.

aws lambda get-code-signing-config --code-signing-config-arn <value>
#Returns information about the specified code signing configuration.

aws lambda list-versions-by-function --function-name <value>
#Returns a list of versions , with the version-specific configuration of each.

aws lambda create-function --function-name <value> --runtime <value> --zip-file fileb://<path to file> --handler evil.handler --role <arn>
#Creates a Lambda function.

aws lambda --function-name <value> --name <value> --function-version <value>
#Creates an alias for a Lambda function version.

aws lambda publish-layer-version --layer-name <value>
#Creates an AWS Lambda layer from a ZIP archive.

aws lambda publish-version --function-name <value>
#Creates a version from the current code and configuration of a function.

aws lambda update-alias --function-name <value>
#Updates the configuration of a Lambda function alias.

aws lambda update-event-source-mapping --uuid <value>
#Updates an event source mapping.

aws lambda delete-alias --function-name <value> --name <value>
#Deletes a Lambda function alias .

aws lambda delete-function --function-name <value>
#Deletes a Lambda function.

aws lambda delete-layer-version --layer-name <value> --version-number <value>
#Deletes a version of an AWS Lambda layer.

aws lambda delete-event-source-mapping --uuid <value>
#Deletes an event source mapping.

-----------------------
Section 6: Databases
-----------------------

RDS:

aws rds describe-db-engine-versions
#Returns a list of the available DB engines.

aws rds describe-account-attributes
#Lists all of the attributes for a customer account. 

aws rds describe-db-clusters
#Returns information about provisioned Aurora DB clusters.

aws rds describe-db-cluster-parameter-groups
#Returns a list of DBClusterParameterGroup descriptions.

aws rds describe-db-cluster-parameters --db-cluster-parameter-group-name <value>
#Returns the detailed parameter list for a particular DB cluster parameter group.

aws rds describe-db-cluster-snapshots
#Returns information about DB cluster snapshots.

aws rds describe-db-cluster-snapshot-attributes --db-cluster-snapshot-identifier <value>
#Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.

aws rds describe-db-instances
#Returns information about provisioned RDS instances.

aws rds describe-db-security-groups
#Returns a list of DBSecurityGroup descriptions.

aws rds describe-db-subnet-groups
#Returns a list of DBSubnetGroup descriptions. 

aws rds describe-certificates
#Lists the set of CA certificates provided by Amazon RDS for this AWS account.

aws rds describe-db-cluster-endpoints
#Returns information about endpoints for an Amazon Aurora DB cluster.

aws rds describe-events 
#Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots

aws rds describe-source-regions
#Returns a list of the source AWS Regions where the current AWS Region can create a read replica, copy a DB snapshot from, or replicate automated backups from.

aws rds describe-db-log-files --db-instance-identifier <value>
#Returns a list of DB log files for the DB instance.

aws rds add-option-to-option-group --option-group-name <value>
#Modifies an existing option group.

aws rds add-role-to-db-cluster --db-cluster-identifier <value>
#Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster.

aws rds create-db-cluster --db-cluster-identifier <value> --engine <value> 
#Creates a new Amazon Aurora DB cluster.

aws rds create-db-instance --db-cluster-identifier <value> --engine <value> --db-instance-class <value>
#Creates a new DB instance.

aws rds create-db-snapshot --db-snapshot-identifier <value> --db-instance-identifier <value>
#Creates a snapshot of a DB instance.

aws rds create-db-subnet-group --db-subnet-group-name <value> --db-subnet-group-description <value> --subnet-ids <value>
#Creates a new DB subnet group.

aws rds modify-certificates --certificate-identifier <value>
#Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances temporarily.

aws rds modify-db-cluster --db-cluster-identifier <value>
#Modify a setting for an Amazon Aurora DB cluster.
aws rds modify-db-instance --db-instance-identifier <value>
#Modifies settings for a DB instance.

aws rds modify-db-snapshot --db-snapshot-identifier <value> --engine-version <value>
#Updates a manual DB snapshot with a new engine version.

aws rds restore-db-cluster-from-snapshot --db-cluster-identifier <value> --snapshot-identifier <value> --engine <value> 
#Creates a new DB cluster from a DB snapshot or DB cluster snapshot. 

aws rds stop-db-instance --db-instance-identifier <value>
#Stops an Amazon RDS DB instance.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DOCDB:

aws docdb create-db-cluster --db-cluster-identifier <value> --db-cluster-identifier --engine <value> --master-username <value> --master-user-password <value> --preferred-maintenance-window <value> 
#Creates a new Amazon DocumentDB cluster.

aws docdb create-db-instance --db-cluster-identifier <value> --engine <value> --db-instance-class <value>
#Creates a new DB instance.

aws docdb describe-db-instances
#Returns information about provisioned DocumentDB instances.

aws rds describe-db-clusters
#Returns information about provisioned Amazon DocumentDB clusters.

aws docdb describe-db-cluster-parameter-groups
#Returns a list of DBClusterParameterGroup descriptions.

aws docdb describe-db-cluster-parameters --db-cluster-parameter-group-name <value>
#Returns the detailed parameter list for a particular DB cluster parameter group.

aws docdb describe-db-cluster-snapshots
#Returns information about DB cluster snapshots.

aws docdb describe-db-cluster-snapshot-attributes --db-cluster-snapshot-identifier <value>
#Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.

aws docdb describe-db-engine-versions
#Returns a list of the available engines.

aws docdb describe-db-subnet-groups
#Returns a list of DBSubnetGroup descriptions. 

aws docdb describe-events 
#Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DynamoDB:

aws dynamodb batch-execute-statement --statements <value>
#To perform batch reads and writes on data stored in DynamoDB.

aws dynamodb batch-get-item --request-items <value>
#The BatchGetItem operation returns the attributes of one or more items from one or more tables.

aws dynamodb batch-write-item --request-items <value>
#Puts or deletes multiple items in one or more tables.

aws dynamodb create-table --attribute-definitions <value> --table-name <value> --key-schema <value>
#Adds a new table to your account. In an AWS account.

aws dynamodb describe-backup --backup-arn <arn>
#Describes an existing backup of a table.

aws dynamodb describe-table --table-name <value>
#Returns information about the table, including the current status of the table.

aws dynamodb describe-limits
#Returns the current provisioned-capacity quotas for your AWS account in a Region.

aws dynamodb execute-statement --statement <value>
#This operation allows you to perform reads and singleton writes on data stored in DynamoDB.

aws dynamodb execute-transaction --transact-statements <value>
#This operation allows you to perform transactional reads or writes on data stored in DynamoDB.

aws dynamodb get-item --table-name <value> --key <value>
#The GetItem operation returns a set of attributes for the item with the given primary key.

aws dynamodb list-backups
#List backups associated with an AWS account.

aws dynamodb list-exports
#Lists completed exports within the past 90 days.

aws dynamodb list-tables
#Returns an array of table names associated with the current account and endpoint.

aws dynamodb put-item --table-name <value> --item <value>
#Creates a new item, or replaces an old item with a new item.

aws dynamodb restore-table-from-backup --target-table-name <value> --backup-arn <value>
#Creates a new table from an existing backup.

aws dynamodb scan --table-name <value>
#Returns one or more items and item attributes by accessing every item in a table

aws dynamodb update-item --table-name <value> --key <value>
#Edits an existing item's attributes, or adds a new item to the table if it does not already exist.

aws dynamodb update-table --table-name <value> 
#Modifies the provisioned throughput settings, global secondary indexes, or DynamoDB Streams settings for a given table.

-----------------------
Section 6: S3 Buckets
-----------------------

aws s3 cp <LocalPath> <S3Uri> or <S3Uri> <LocalPath> or <S3Uri> <S3Uri>
#Copies a local file or S3 object to another location locally or in S3.

aws s3 ls <S3Uri>
#List S3 objects and common prefixes under a prefix or all S3 buckets.

aws s3 mb <S3Uri>
#Creates an S3 bucket.

aws s3 mv <LocalPath> <S3Uri> or <S3Uri> <LocalPath> or <S3Uri> <S3Uri>
#Moves a local file or S3 object to another location locally or in S3.

aws s3 presign <S3Uri>
#Generate a pre-signed URL for an Amazon S3 object.

aws s3 rb <S3Uri>
#Deletes an empty S3 bucket. 

aws s3 rm <S3Uri>
#Deletes an S3 object.

aws s3 sync <LocalPath> <S3Uri> or <S3Uri> <LocalPath> or <S3Uri> <S3Uri>
#Syncs directories and S3 prefixes.

aws s3 website <S3Uri>
#Set the website configuration for a bucket.

aws s3api list-buckets
#List buckets.

aws s3api list-objects --bucket <bucket-name>
#List bucket objects.

aws s3api get-bucket-location --bucket <bucket-name>
#Retrieves bucket location.

aws s3api list-objects-v2 --bucket data-extractor-repo
#Returns some or all (up to 1,000) of the objects in a bucket.

aws s3api list-object-versions --bucket <bucket-name>
#List object versions.

aws s3api get-bucket-acl --bucket <bucket-name>
#Return the ACL of the bucket.

aws s3api get-bucket-cors --bucket <bucket-name>
#Returns the cors configuration information set for the bucket.

aws s3api get-bucket-logging --bucket <value>
#Returns the logging status of a bucket and the permissions users have to view and modify that status.

aws s3api get-bucket-policy-status --bucket <value>
#Retrieves the policy status for an Amazon S3 bucket.

aws s3api get-bucket-policy --bucket <value>
#Returns the policy of a specified bucket.

aws s3api get-bucket-ownership-controls --bucket <value>
#Retrieves OwnershipControls for an Amazon S3 bucket.

aws s3api get-object --bucket <value> --key <value> <outfile>
#Retrieves objects from Amazon S3. 

aws s3api get-object-acl --bucket <value> --key <value>
#Returns the access control list (ACL) of an object. 

aws s3api get-object-tagging --bucket <value> --key <value>
#Returns the tag-set of an object.

aws s3api get-public-access-block --bucket <value>
#Retrieves the PublicAccessBlock configuration for an Amazon S3 bucket.

aws s3api put-bucket-acl --bucket <value> --access-control-policy file://<path to json file>
#Sets the permissions on an existing bucket using access control lists (ACL).

aws s3api put-bucket-cors --bucket <value> --cors-configuration <value>
#Sets the cors configuration for the bucket.

aws s3api put-bucket-policy --bucket <value> --policy file://<path to json file>
#Applies an Amazon S3 bucket policy to an Amazon S3 bucket.

aws s3api put-bucket-tagging --bucket <value> --tagging <value>
#Use tags to organize your AWS bill to reflect your own cost structure.

aws s3api put-object --bucket <value> --key <value> --body <path to object>
#Adds an object to a bucket.

aws s3api put-object-acl --bucket <value> --key <value>  --access-control-policy file://<path to json file>
#Uses the acl subresource to set the access control list (ACL) permissions for a new or existing object for s3 bucket.

aws s3api put-object-tagging --bucket <value> --key <value> --tagging <value>
#Sets the supplied tag-set to an object that already exists in a bucket.

aws s3api put-bucket-ownership-controls --bucket <value> --ownership-controls <value>
#Creates or modifies OwnershipControls for an Amazon S3 bucket.

aws s3api copy-object --bucket <value> --copy-source <object URI> --key <value> 
#Creates a copy of an object that is already stored in Amazon S3.

aws s3api create-bucket --bucket <value>
#Creates a new S3 bucket.

aws s3api delete-bucket --bucket <value>
#Deletes the S3 bucket.

aws s3api delete-bucket-cors --bucket <value>
#Deletes the S3 bucket cors configuration information set.

aws s3api delete-bucket-policy --bucket <value>
#Delete the policy of a specified bucket.

aws s3api delete-bucket-tagging --bucket <value>
#Deletes the tags from the bucket.

aws s3api delete-bucket-tagging --bucket <value> --key <value>
#Removes the null version (if there is one) of an object and inserts a delete marker.

aws s3api delete-bucket-tagging --bucket <value> --delete file://<delete.json>
#Delete multiple objects from a bucket using a single HTTP request.

aws s3api delete-bucket-ownership-controls --bucket <value>
#Removes OwnershipControls for an Amazon S3 bucket.
